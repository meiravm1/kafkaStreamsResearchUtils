version: '2'
networks:
  app-tier:
    driver: bridge

services:
  zookeeper:
    image: 'bitnami/zookeeper:3'
    networks:
      - app-tier
    ports:
      - '2181:2181'
    volumes:
      - 'zookeeper_data:/bitnami'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:2'
    networks:
      - app-tier
    ports:
      - '9092:9092'
      - '29094:29094'
    volumes:
      - 'kafka_data:/bitnami'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENERS=LISTENER_INTERNAL://kafka:29092,LISTENER_CONTAINER://kafka:9092,LISTENER_EXTERNAL://kafka:29094
      - KAFKA_ADVERTISED_LISTENERS=LISTENER_INTERNAL://kafka:29092,LISTENER_CONTAINER://localhost:9092,LISTENER_EXTERNAL://192.168.56.101:29094
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_INTERNAL:PLAINTEXT,LISTENER_CONTAINER:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=LISTENER_INTERNAL
    depends_on:
      - zookeeper
  ksqldb-server:
    image: confluentinc/ksqldb-server:0.8.1
    networks:
      - app-tier
    hostname: ksqldb-server
    container_name: ksqldb-server
    depends_on:
      - kafka
    ports:
      - "8088:8088"
    environment:
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_BOOTSTRAP_SERVERS: kafka:29092
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"

  ksqldb-cli:
    image: confluentinc/ksqldb-cli:0.8.1
    networks:
      - app-tier
    container_name: ksqldb-cli
    depends_on:
      - kafka
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
